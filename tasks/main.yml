- name: include OS specific vars.
  include_vars: "{{ item }}"
  with_first_found:
    - files:
      - "setup-{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
      - "setup-{{ ansible_distribution }}.yml"
      - "setup-{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml"
      - "setup-{{ ansible_os_family }}.yml"
      - "setup.yml"
      skip: false

- name: install prerequisite packages to run
  package:
    name: "{{ pbspro_packages_to_run }}"

- block:
  - name: install prerequisite packages to build
    package:
      name: "{{ pbspro_packages_to_build }}"

  - name: get src tarball from github
    unarchive:
      src: "{{ pbspro_src_url[pbspro_version] }}"
      dest: /tmp
      remote_src: yes
      list_files: yes
    register: pbspro_src_files

  - name: build pbspro
    command: "{{ item }}"
    args:
      chdir: "/tmp/{{ pbspro_src_files.files[0] | dirname }}"
    with_items:
      - "./autogen.sh"
      - "./configure --prefix={{ pbspro_prefix }}"
      - "make"
      - "make install"
      - "{{ pbspro_prefix }}/libexec/pbs_postinstall"
  when: not pbspro_prebuild

- name: set server name, enable MOM, disable server, sheduler, and communicator on slave node
  replace:
    path: "/etc/pbs.conf"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - {regexp: "^PBS_SERVER=.*$", replace: "PBS_SERVER={{ pbspro_server_hostname }}"}
    - {regexp: "^PBS_START_MOM=0", replace: "PBS_START_MOM=1"}
    - {regexp: "^PBS_START_SERVER=1", replace: "PBS_START_SERVER={{ pbspro_server | ternary('1','0') }}"}
    - {regexp: "^PBS_START_SCHED=1",  replace: "PBS_START_SCHED={{ pbspro_server | ternary('1','0') }}"}
    - {regexp: "^PBS_START_COMM=1",   replace: "PBS_START_COMM={{ pbspro_server | ternary('1','0') }}"}

- name: set file permissions
  file:
    mode: "{{ item.mode }}"
    path: "{{ item.path }}"
  with_items:
    - { mode: "04755", path: "{{ pbspro_prefix }}/sbin/pbs_iff" }
    - { mode: "04755", path: "{{ pbspro_prefix }}/sbin/pbs_rcp" }
    - { mode: "0700",  path: "{{ pbspro_prefix }}/bin/pbs_topologyinfo" }
    - { mode: "0700",  path: "{{ pbspro_prefix }}/sbin/pbs_mom" }
    - { mode: "0700",  path: "{{ pbspro_prefix }}/sbin/pbs_sched" }
    - { mode: "0700",  path: "{{ pbspro_prefix }}/sbin/pbs_server" }
    - { mode: "0755",  path: "{{ pbspro_prefix }}/bin/nqs2pbs" }

- name: start pbs
  command: /etc/init.d/pbs start

- name: add slave nodes to qmgr
  command: qmgr -c "create node {{ item }}"
  with_items: "{{ pbspro_slave_nodes }}"
  delegate_to: "{{ pbspro_server_hostname }}"
  run_once: True
